/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Hub.ChangePasswordHub;
import Model.Hub.MainHub;
import Utility.DBFactory;
import Utility.Message;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author java-dev
 */
public class FormChangePassword extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormChangePassword
     */
    public FormChangePassword() {
        initComponents();
        ChangePasswordHub.setChangePassword(this);
        txtChange_Username.setText(FormMain.user.getUserName());
        txtChange_Username.setEditable(false);

        Dimension dspSize = MainHub.main.getDspMain().getSize();
        Dimension changePasswordSize = getSize();
        int x = (dspSize.width - changePasswordSize.width) / 2;
        int y = (dspSize.height - changePasswordSize.height) / 2;

        setLocation(x, y);;

    }

    public void checkPassword() {

        if (txtChange_NewPassword.getText().isEmpty() && txtChange_NewPasswordAgain.getText().isEmpty()) { //ถ้าว่างทั้งคู่

            lblCheckPasswordMatch.setForeground(new Color(255, 153, 0));
            lblCheckPasswordMatch.setText("ตรวจสอบรหัสผ่าน");

        } else if (txtChange_NewPassword.getText().isEmpty() || txtChange_NewPasswordAgain.getText().isEmpty()) { //ถ้าอันใดอันหนึ่งว่าง

            lblCheckPasswordMatch.setForeground(new Color(255, 0, 0));
            lblCheckPasswordMatch.setText("รหัสผ่านไม่ตรงกัน");

        } else { //ถ้าไม่ว่างทั้งคู่

            if (txtChange_NewPassword.getText().equals(txtChange_NewPasswordAgain.getText())) { //ตรง

                lblCheckPasswordMatch.setForeground(new Color(0, 153, 0));
                lblCheckPasswordMatch.setText("รหัสผ่านตรงกัน");

            } else { //ไม่ตรง

                lblCheckPasswordMatch.setForeground(new Color(255, 0, 0));
                lblCheckPasswordMatch.setText("รหัสผ่านไม่ตรงกัน");

            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnChangePasswordMain = new javax.swing.JPanel();
        pnChangePassword = new javax.swing.JPanel();
        txtChange_Username = new javax.swing.JTextField();
        txtChange_NewPasswordAgain = new javax.swing.JPasswordField();
        btnClearPassword = new javax.swing.JButton();
        lblChange_OldPassword = new javax.swing.JLabel();
        lblChange_NewPasswordAgain = new javax.swing.JLabel();
        btnChangePassword = new javax.swing.JButton();
        lblChange_Username = new javax.swing.JLabel();
        lblChange_NewPassword = new javax.swing.JLabel();
        txtChange_OldPassword = new javax.swing.JPasswordField();
        txtChange_NewPassword = new javax.swing.JPasswordField();
        lblCheckPasswordMatch = new javax.swing.JLabel();
        lblCheckOldPassword = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("เปลี่ยนรหัสผ่าน");
        setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        setPreferredSize(new java.awt.Dimension(435, 250));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        pnChangePassword.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " เปลี่ยนรหัสผ่าน ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        txtChange_Username.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtChange_Username.setPreferredSize(new java.awt.Dimension(6, 25));

        txtChange_NewPasswordAgain.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtChange_NewPasswordAgain.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtChange_NewPasswordAgainFocusGained(evt);
            }
        });
        txtChange_NewPasswordAgain.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChange_NewPasswordAgainKeyReleased(evt);
            }
        });

        btnClearPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnClearPassword.setText("ล้าง");
        btnClearPassword.setPreferredSize(new java.awt.Dimension(81, 25));
        btnClearPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearPasswordMouseClicked(evt);
            }
        });

        lblChange_OldPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblChange_OldPassword.setText("รหัสผ่านเดิม : ");

        lblChange_NewPasswordAgain.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblChange_NewPasswordAgain.setText("รหัสผ่านใหม่(อีกครั้ง) : ");

        btnChangePassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnChangePassword.setText("เปลี่ยน");
        btnChangePassword.setPreferredSize(new java.awt.Dimension(81, 25));
        btnChangePassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnChangePasswordMouseClicked(evt);
            }
        });

        lblChange_Username.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblChange_Username.setText("ชื่อผู้ใช้ : ");

        lblChange_NewPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblChange_NewPassword.setText("รหัสผ่านใหม่ : ");

        txtChange_OldPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtChange_OldPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtChange_OldPasswordFocusGained(evt);
            }
        });
        txtChange_OldPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChange_OldPasswordKeyReleased(evt);
            }
        });

        txtChange_NewPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtChange_NewPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtChange_NewPasswordFocusGained(evt);
            }
        });
        txtChange_NewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtChange_NewPasswordKeyReleased(evt);
            }
        });

        lblCheckPasswordMatch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCheckPasswordMatch.setForeground(new java.awt.Color(255, 153, 0));
        lblCheckPasswordMatch.setText("ตรวจสอบรหัสผ่าน");

        lblCheckOldPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblCheckOldPassword.setForeground(new java.awt.Color(255, 153, 0));
        lblCheckOldPassword.setText("ตรวจสอบรหัสผ่าน");

        javax.swing.GroupLayout pnChangePasswordLayout = new javax.swing.GroupLayout(pnChangePassword);
        pnChangePassword.setLayout(pnChangePasswordLayout);
        pnChangePasswordLayout.setHorizontalGroup(
            pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChangePasswordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblChange_Username, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblChange_OldPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblChange_NewPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblChange_NewPasswordAgain, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtChange_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChange_OldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChange_NewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChange_NewPasswordAgain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCheckOldPassword)
                    .addComponent(lblCheckPasswordMatch))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChangePasswordLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        pnChangePasswordLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtChange_NewPassword, txtChange_NewPasswordAgain, txtChange_OldPassword, txtChange_Username});

        pnChangePasswordLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnChangePassword, btnClearPassword});

        pnChangePasswordLayout.setVerticalGroup(
            pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnChangePasswordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChange_Username)
                    .addComponent(txtChange_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChange_OldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChange_OldPassword)
                    .addComponent(lblCheckOldPassword))
                .addGap(8, 8, 8)
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChange_NewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChange_NewPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChange_NewPasswordAgain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChange_NewPasswordAgain)
                    .addComponent(lblCheckPasswordMatch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnChangePasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChangePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnChangePasswordLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtChange_NewPassword, txtChange_NewPasswordAgain, txtChange_OldPassword, txtChange_Username});

        pnChangePasswordLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnChangePassword, btnClearPassword});

        javax.swing.GroupLayout pnChangePasswordMainLayout = new javax.swing.GroupLayout(pnChangePasswordMain);
        pnChangePasswordMain.setLayout(pnChangePasswordMainLayout);
        pnChangePasswordMainLayout.setHorizontalGroup(
            pnChangePasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChangePasswordMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnChangePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnChangePasswordMainLayout.setVerticalGroup(
            pnChangePasswordMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnChangePasswordMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnChangePassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pnChangePasswordMain, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        MainHub.main.openChangePassword = false;
    }//GEN-LAST:event_formInternalFrameClosed

    private void txtChange_OldPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChange_OldPasswordKeyReleased
        // TODO add your handling code here:
        if (txtChange_OldPassword.getText().isEmpty()) {
            lblCheckOldPassword.setForeground(new Color(255, 153, 0));
            lblCheckOldPassword.setText("ตรวจสอบรหัสผ่าน");
        } else {
            if (txtChange_OldPassword.getText().equals(FormMain.user.getUserPassword())) {
                lblCheckOldPassword.setForeground(new Color(0, 153, 0));
                lblCheckOldPassword.setText("รหัสผ่านถูกต้อง");
            } else {
                lblCheckOldPassword.setForeground(new Color(255, 0, 0));
                lblCheckOldPassword.setText("รหัสผ่านไม่ถูกต้อง");
            }
        }
    }//GEN-LAST:event_txtChange_OldPasswordKeyReleased

    private void txtChange_NewPasswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChange_NewPasswordKeyReleased
        // TODO add your handling code here:
        checkPassword();
    }//GEN-LAST:event_txtChange_NewPasswordKeyReleased

    private void txtChange_NewPasswordAgainKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChange_NewPasswordAgainKeyReleased
        // TODO add your handling code here:
        checkPassword();
    }//GEN-LAST:event_txtChange_NewPasswordAgainKeyReleased

    private void btnClearPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearPasswordMouseClicked
        // TODO add your handling code here:
        txtChange_OldPassword.setText("");
        txtChange_NewPassword.setText("");
        txtChange_NewPasswordAgain.setText("");
        lblCheckOldPassword.setForeground(new Color(255, 153, 0));
        lblCheckOldPassword.setText("ตรวจสอบรหัสผ่าน");
        lblCheckPasswordMatch.setForeground(new Color(255, 153, 0));
        lblCheckPasswordMatch.setText("ตรวจสอบรหัสผ่าน");
    }//GEN-LAST:event_btnClearPasswordMouseClicked

    private void btnChangePasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnChangePasswordMouseClicked
        // TODO add your handling code here:

        if (!txtChange_OldPassword.getText().isEmpty()
                || !txtChange_NewPassword.getText().isEmpty()
                || !txtChange_NewPasswordAgain.getText().isEmpty()) {
            
            String checkOld = lblCheckOldPassword.getText();
            String checkNew = lblCheckPasswordMatch.getText();
            
            
            if (!checkOld.equals("รหัสผ่านถูกต้อง")) {
                Message.showErrorMessage("พบข้อผิดพลาด", "รหัสผ่านเดิมไม่ถูกต้อง");
                return;
            }

            if (!checkNew.equals("รหัสผ่านตรงกัน")) {
                Message.showErrorMessage("พบข้อผิดพลาด", "รหัสผ่านใหม่ไม่ตรงกัน");
                return;
            }

            String sql = "UPDATE tbuser SET userPassword = '" + txtChange_NewPassword.getText() + "' WHERE userId = '" + FormMain.user.getUserId() + "'";
            try {
                int result = DBFactory.getConnection().createStatement().executeUpdate(sql);

                if (result != -1) {
                    Message.showInfoMessage("ผลการทำงาน", "เปลี่ยนรหัสผ่านเรียบร้อยแล้ว");
                }

            } catch (SQLException ex) {
                Logger.getLogger(FormChangePassword.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        } else {
            Message.showMessageEmpty();
        }

    }//GEN-LAST:event_btnChangePasswordMouseClicked

    private void txtChange_OldPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChange_OldPasswordFocusGained
        // TODO add your handling code here:
        txtChange_OldPassword.selectAll();
    }//GEN-LAST:event_txtChange_OldPasswordFocusGained

    private void txtChange_NewPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChange_NewPasswordFocusGained
        // TODO add your handling code here:
        txtChange_NewPassword.selectAll();
    }//GEN-LAST:event_txtChange_NewPasswordFocusGained

    private void txtChange_NewPasswordAgainFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtChange_NewPasswordAgainFocusGained
        // TODO add your handling code here:
        txtChange_NewPasswordAgain.selectAll();
    }//GEN-LAST:event_txtChange_NewPasswordAgainFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JButton btnClearPassword;
    private javax.swing.JLabel lblChange_NewPassword;
    private javax.swing.JLabel lblChange_NewPasswordAgain;
    private javax.swing.JLabel lblChange_OldPassword;
    private javax.swing.JLabel lblChange_Username;
    private javax.swing.JLabel lblCheckOldPassword;
    private javax.swing.JLabel lblCheckPasswordMatch;
    private javax.swing.JPanel pnChangePassword;
    private javax.swing.JPanel pnChangePasswordMain;
    private javax.swing.JPasswordField txtChange_NewPassword;
    private javax.swing.JPasswordField txtChange_NewPasswordAgain;
    private javax.swing.JPasswordField txtChange_OldPassword;
    private javax.swing.JTextField txtChange_Username;
    // End of variables declaration//GEN-END:variables
}
